version: '3.8'
services:
  proxy-nginx:
    image: nginx:latest
    container_name: proxy-nginx
    ports:
      - 80:${NGINX_PORT}
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./WEB/dist:/usr/share/nginx/html
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
    depends_on:
      - nestjs
      - postgres-db
    networks:
      network:
        ipv4_address: 10.5.0.2

  postgres-db:
    image: postgres
    container_name: postgres-db
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      network:
        ipv4_address: 10.5.0.3

  nestjs:
    build:
      context: ./BACKEND
      dockerfile: Dockerfile
    container_name: nestjs
    command: ['npm', 'run', 'start']
    ports:
      - 3000:3000
    volumes:
      - ./BACKEND:/app
    depends_on:
      - postgres-db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - NODE_ENV:${NODE_ENV}
    env_file:
      - .env
    networks:
      network:
        ipv4_address: 10.5.0.4

volumes:
  db:
    driver: local

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

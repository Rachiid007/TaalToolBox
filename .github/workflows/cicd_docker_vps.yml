name: CI/CD Pipeline - Runs All tests and builds, if all pass, create Docker images and deploy them in the Docker Registry

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  backend-test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
          cache-dependency-path: 'BACKEND/package-lock.json'

      - name: Execute Backend Unit tests
        run: |
          npm ci
          npm run test
          npm run build
        working-directory: ./BACKEND

  frontend-test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
          cache-dependency-path: 'WEB/package-lock.json'

      - name: Execute Cypress E2E tests
        uses: cypress-io/github-action@v5
        timeout-minutes: 5
        with:
          working-directory: ./WEB
          start: npm run dev
          wait-on: http://localhost:5173
          wait-on-timeout: 60
          browser: chrome
          spec: 'cypress/**/*.cy.js'

      - name: Execute Frontend Unit tests
        run: |
          npm ci
          npm run test:unit
          npm run build
        working-directory: ./WEB

  # if all the previous step is ok, then build the docker image from each of the folders
  build-docker-image:
    runs-on: ubuntu-latest
    needs: [backend-test-build, frontend-test-build]
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: rachiid007
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: ./BACKEND
          file: ./BACKEND/Dockerfile
          push: true
          tags: rachiid007/backend:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v3
        with:
          context: ./WEB
          file: ./WEB/Dockerfile
          push: true
          tags: rachiid007/frontend:latest
